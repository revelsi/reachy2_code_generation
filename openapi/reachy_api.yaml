openapi: 3.0.3
info:
  title: Reachy Function Calling API
  description: API for controlling the Reachy 2 robot through natural language commands
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server
paths:
  /api/chat:
    post:
      summary: Process a chat message
      description: Send a message to the agent and get a response
      operationId: chatWithAgent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  description: User message to process
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Agent's response to the user message
                  tool_calls:
                    type: array
                    description: List of tool calls made during processing
                    items:
                      $ref: '#/components/schemas/ToolCall'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/reset:
    post:
      summary: Reset conversation
      description: Reset the conversation with the agent
      operationId: resetConversation
      responses:
        '200':
          description: Successful reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status message
  /api/tools:
    get:
      summary: Get available tools
      description: Get the list of available tools for the agent
      operationId: getTools
      responses:
        '200':
          description: List of available tools
          content:
            application/json:
              schema:
                type: object
                properties:
                  tools:
                    type: array
                    description: List of available tools
                    items:
                      $ref: '#/components/schemas/Tool'
  /api/status:
    get:
      summary: Get robot status
      description: Get the status of the robot and agent
      operationId: getStatus
      responses:
        '200':
          description: Status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Agent not initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/config:
    get:
      summary: Get agent configuration
      description: Get the current configuration of the agent
      operationId: getConfig
      responses:
        '200':
          description: Current configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
    post:
      summary: Update agent configuration
      description: Update the configuration of the agent
      operationId: updateConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigUpdate'
      responses:
        '200':
          description: Updated configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status message
                  model:
                    type: string
                    description: LLM model being used
                  focus_modules:
                    type: array
                    description: List of focused modules
                    items:
                      type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ToolCall:
      type: object
      properties:
        name:
          type: string
          description: Name of the tool
        arguments:
          type: object
          description: Arguments passed to the tool
        result:
          type: object
          description: Result of the tool execution
    Tool:
      type: object
      properties:
        type:
          type: string
          description: Type of the tool
        function:
          type: object
          properties:
            name:
              type: string
              description: Name of the function
            description:
              type: string
              description: Description of the function
            parameters:
              type: object
              description: Parameters for the function
    Status:
      type: object
      properties:
        agent_initialized:
          type: boolean
          description: Whether the agent is initialized
        model:
          type: string
          description: LLM model being used
        robot:
          type: object
          properties:
            status:
              type: string
              description: Status of the robot
            last_update:
              type: number
              description: Timestamp of the last update
            arms:
              type: object
              properties:
                left:
                  $ref: '#/components/schemas/ArmStatus'
                right:
                  $ref: '#/components/schemas/ArmStatus'
            head:
              type: object
              properties:
                position:
                  type: array
                  items:
                    type: number
                  description: Position of the head [yaw, pitch, roll]
            base:
              type: object
              properties:
                position:
                  type: array
                  items:
                    type: number
                  description: Position of the base [x, y, theta]
            last_action:
              type: string
              nullable: true
              description: Last action performed by the robot
    ArmStatus:
      type: object
      properties:
        position:
          type: array
          items:
            type: number
          description: Joint positions of the arm
        gripper_opening:
          type: number
          description: Opening of the gripper (0.0 to 1.0)
    Config:
      type: object
      properties:
        model:
          type: string
          description: LLM model being used
        focus_modules:
          type: array
          description: List of focused modules
          items:
            type: string
    ConfigUpdate:
      type: object
      properties:
        model:
          type: string
          description: LLM model to use
        focus_modules:
          type: array
          description: List of modules to focus on
          items:
            type: string
        regenerate_tools:
          type: boolean
          description: Whether to regenerate tool definitions
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message 